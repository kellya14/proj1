#!/bin/bash
#Project 1
#Author/Created by - Logan Toler
#Team 2 - Zachary Brewer, Kenilkumar Patel
#Automated Apache Install

#Variables
version=$(date +"%m_%d_%Y_%H_%M_%S")
CFG="/etc/httpd/conf/httpd.conf"
CFG_BAK="/etc/httpd/conf/httpd.conf_$version"
ssl="/etc/httpd/conf.d/ssl.conf"
output="apache-install.log"

#Install and Start Apache/httpd
echo "Installing Apache..." | tee -a $output
yum update -y >> $output
yum install httpd -y >> $output
systemctl start httpd.service >> $output
systemctl enable httpd >> $output
echo "Installation Complete!" | tee -a $output

#create back up and configure httpd.conf
echo "Backing up httpd.conf..." | tee -a $output
cp /etc/httpd/conf/httpd.conf $CFG_BAK >> $output
echo "Backup Complete" | tee -a $output
echo "Configuring httpd.conf..." | tee -a $output
sed -i 's/ServerAdmin root@localhost/ServerAdmin cit470.fa2018.team.two@gmail.com/g' $CFG >> $output
sed -i 's/#ServerName www.example.com:80/ServerName 10.2.7.229:80/g' $CFG >> $output
echo "Configuration complete." | tee -a $output
echo "Configuring userdir.conf..." | tee -a $output
#sed -i '31 a\AliasMatch ^/users/(.*)/(.*)$ /home/$1/public_html/$2 \' /etc/httpd/conf.d/userdir.conf
sed -i 's/UserDir disabled/#UserDir disabled/g' /etc/httpd/conf.d/userdir.conf >> $output
sed -i 's/#UserDir public_html/UserDir public_html/g' /etc/httpd/conf.d/userdir.conf >> $output
echo "Configuration Complete." | tee -a $output

#allow traffic for http&https services
echo "Configuring firewall..." | tee -a $output
sudo firewall-cmd --zone=public --permanent --add-service=http >> $output
sudo firewall-cmd --zone=public --permanent --add-service=https >> $output
sudo firewall-cmd --reload >> $output
echo "Configuration Complete." | tee -a $output

#https/ssl setup
echo "Installing SSL..." | tee -a $output
sudo yum install mod_ssl openssl -y >> $output
echo "Install Complete." | tee -a $output
echo "Backing up ssl.conf..." | tee -a $output
cp /etc/httpd/conf.d/ssl.conf /etc/httpd/conf.d/ssl.conf_bak_$version >> $output
echo "Backup complete." | tee -a $output
echo "Creating SSL keys..." | tee -a $output
sudo openssl genrsa -out ca.key 2048 >> $output
sudo openssl req -new -key ca.key -subj "/C=US/ST=Kentucky/L=Highland Heights/O=NKU/OU=CIT472_Team2/CN=10.2.7.229/emailAddress=cit470.fa2018.team.two@gmail.com" -out ca.csr  >> $output
sudo openssl x509 -req -days 365 -in ca.csr -signkey ca.key -out ca.crt >> $output
echo "SSL keys created" | tee -a $output
echo "Configuring SSL..." | tee -a $output
sudo mkdir /etc/ssl/private >> $output
sudo chmod 700 /etc/ssl/private >> $output
cp ca.key /etc/ssl/private/ca.key >> $output
cp ca.csr /etc/ssl/private/ca.csr >> $output
cp ca.crt /etc/ssl/private/ca.crt >> $output
sed -i 's@#ServerName www.example.com:443@ ServerName 10.2.7.229:443@g' $ssl >> $output
sed -i 's@#DocumentRoot "/var/www/html"@ DocumentRoot "/var/www/html/"@g' $ssl >> $output
sed -i 's\SSLCertificateKeyFile /etc/pki/tls/private/localhost.key\SSLCertificateKeyFile /etc/ssl/private/ca.key\g' $ssl >> $output
sed -i 's\SSLCertificateFile /etc/pki/tls/certs/localhost.crt\SSLCertificateFile /etc/ssl/private/ca.crt\g' $ssl >> $output
echo "Configuration complete." | tee -a $output

#redirect http to https
echo "Creating virtual host..." | tee -a $output
touch /etc/httpd/conf.d/non-ssl.conf >> $output
echo "<VirtualHost *:80>" >> /etc/httpd/conf.d/non-ssl.conf >> $output
echo "ServerName 10.2.7.229" >> /etc/httpd/conf.d/non-ssl.conf >> $output
echo "Redirect "/" "https://10.2.7.229"" >> /etc/httpd/conf.d/non-ssl.conf >> $output
echo "</VirtualHost>" >> /etc/httpd/conf.d/non-ssl.conf >> $output
echo "Virtual host created. All traffic is sent through HTTPS." | tee -a $output

systemctl restart httpd.service >> $output
echo "Script complete." | tee -a $output
